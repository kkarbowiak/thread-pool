#include "tpoolCommand.h"

#include "tpoolJob.h"

#include <utility> // std::move()


namespace tpool
{
////////////////////////////////////////////////////////////////////////////////
Command::Command()
    : mType(WORKER_TERMINATION)
    , mJob()
{
}
////////////////////////////////////////////////////////////////////////////////
Command::Command(std::unique_ptr<Job> job)
    : mType(JOB_EXECUTION)
    , mJob(std::move(job))
{
}
////////////////////////////////////////////////////////////////////////////////
Command::Command(Command && other)
    : mType(other.mType)
    , mJob(std::move(other.mJob))
{
}
////////////////////////////////////////////////////////////////////////////////
Command::~Command()
{
}
////////////////////////////////////////////////////////////////////////////////
Command & Command::operator=(Command && other)
{
    mType = other.mType;
    mJob = std::move(other.mJob);

    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Command::Type Command::getType() const
{
    return mType;
}
////////////////////////////////////////////////////////////////////////////////
std::unique_ptr<Job> Command::getJob()
{
    return std::move(mJob);
}
////////////////////////////////////////////////////////////////////////////////
}

